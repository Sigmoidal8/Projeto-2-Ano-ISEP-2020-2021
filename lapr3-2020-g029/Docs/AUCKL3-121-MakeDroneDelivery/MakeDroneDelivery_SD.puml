@startuml
autonumber

actor "Administrator" as c
participant ":MakeDeliveryUI" as UI
participant ":MakeDeliveryController" as CTRL
participant ":Platform" as PLAT
participant "pl\n:PharmacyList" as PL
participant "sl\n:AvailableDroneList" as SL
participant "list\n:ArrayList" as LIST
participant "rDeli\n:deliveryList" as RDELI
participant "Delivery\n:Delivery" as DLI

activate c
c -> UI : Wants to start a delivery
activate UI
UI ->CTRL : getPharmacyList()
activate CTRL
CTRL -> PLAT : pl = getPharmacyList()
activate PLAT
deactivate PLAT
deactivate CTRL
UI -> c : shows the list of pharmacy and asks the administrator to choose one
deactivate UI

c -> UI :  chooses the pharmacy
activate UI
UI -> CTRL : getPharmacy(pharmacyid)
activate CTRL
CTRL -> PL : p = getPharmacy(pharmacyid)
activate PL
deactivate PL
deactivate CTRL
UI -> CTRL : getScooterList()
activate CTRL
CTRL -> PLAT : sl = getScooterList()
activate PLAT
deactivate PLAT
deactivate CTRL
UI -> c : shows the list of drones and asks the administrator to choose one
deactivate UI

c -> UI :  chooses the drone
activate UI
UI -> CTRL : getDrone(id)
activate CTRL
CTRL -> SL : d = getDrone(id)
activate SL
deactivate SL
deactivate CTRL
UI -> CTRL : getDeliveryList()
activate CTRL
CTRL -> PLAT : rDeli = getDeliveryList()
activate PLAT
deactivate PLAT
CTRL -> RDELI : getDeliveryListPharmacy(p);
activate RDELI
deactivate RDELI
deactivate CTRL
loop [ until the administrator select all of the pretended deliveries ]
UI --> c : shows the list of deliveries of that pharmacy that are remaining and asks\n the administrator to choose the deliveries that he wants to deliver
deactivate UI

c -> UI : chooses the deliveries.
activate UI
UI -> CTRL : getChoosenDelivery(id)
activate CTRL
CTRL -> RDELI : delivery = verifyDelivery(id)
activate RDELI
deactivate RDELI
alt [ if the weight sum of products of that delivery is less than the drones's max weight capacity ]
CTRL -> LIST:  addDeliverySelected(delivery)
activate LIST
deactivate LIST
CTRL -> RDELI:  removeDeliveryFormList(delivery)
activate RDELI
deactivate RDELI
end
end
activate RDELI
deactivate RDELI

CTRL -> RDELI : getEnergySpentInDelivery(listDelivery, distance, scooter)
activate RDELI
deactivate RDELI
deactivate CTRL

UI --> c : shows the administrator the energy spent\nand where is the scooter gonna park.
deactivate UI

deactivate c

@enduml
