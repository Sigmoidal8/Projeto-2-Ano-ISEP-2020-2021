@startuml
autonumber

actor "Client" as CL
participant ":BuyAProductUI" as UI
participant ":BuyAProductController" as CTRL
participant "AplicationPOT" as POT
participant "app\n:AplicationPOT" as APOT
participant "session\n:UserSession" as SES
participant ":Platform" as PLAT
participant "rcl\n:ClientRegister" as RCL
participant "invoice\n:invoice" as INV
participant "delList\n:DeliveryList" as DELLIST
participant "delivery\n:delivery" as DEL
participant "pl\n:pharmacyList" as PL
participant "prl\n:productList" as PRL
participant "p\n:Pharmacy" as P

activate CL
CL -> UI :  Start Buying Procedure.
activate UI
UI -> CTRL : pl = getPharmacyList()
activate CTRL
CTRL -> PLAT : pl = getPharmacyList()
activate PLAT
deactivate PLAT
deactivate CTRL
UI --> CL : shows the list of pharmacy and asks the client\nto choose one
deactivate UI



CL -> UI :  chooses the pharmacy
activate UI
UI -> CTRL : p = getPharmacy(pharmacyID)
activate CTRL
activate PL
CTRL -> PL : p = getPharmacy(pharmacyID)
deactivate PL
deactivate CTRL
loop
UI -> CTRL : prl = getProductList()
activate CTRL
activate P
CTRL -> P : prl = getProductList()
deactivate P
deactivate CTRL
UI --> CL : shows the list of products and asks the client\nto choose one
deactivate UI


CL -> UI : selects a product
activate UI
UI -> CTRL : pr = getProduct(productID)
activate CTRL
CTRL -> PRL : pr = getProduct(productID)
activate PRL
deactivate PRL
deactivate CTRL
UI --> CL : shows the product and asks for it's quantity
deactivate UI

CL -> UI : inserts the quantity
activate UI

UI -> CTRL : mp = preencherMapa(pr,quantity)
activate CTRL
deactivate CTRL

UI -> CTRL : updateStock()
activate CTRL
deactivate CTRL
end


UI -> CTRL : c = getCLient()
activate CTRL
CTRL -> POT : app = getInstance()
activate POT
deactivate POT
CTRL -> APOT : session = getAtualSession()
activate APOT
deactivate APOT
CTRL -> SES : email = getUserEmai()
activate SES
deactivate SES
CTRL -> PLAT : rcl = getClientRegister()
activate PLAT
deactivate PLAT
CTRL -> RCL : c = getClientByEmail(email)
activate RCL
deactivate RCL
deactivate CTRL


UI -> CTRL : inv = newInvoice(mp)
activate CTRL
CTRL -> CTRL : generateId()
CTRL -> CTRL : getDate()
CTRL -> CTRL : calcPrice()
CTRL -> INV **: create(id, date, price, client)
deactivate CTRL

deactivate CTRL
UI --> CL : shows the products and asks for payment method

deactivate UI

CL -> UI : selects the payment method
activate UI

opt pay with credits
UI ->CTRL : vCredits = verifyCredits(inv)
activate CTRL
deactivate CTRL

UI -> CTRL : addCredits(vCredits)
activate CTRL
deactivate CTRL

end

deactivate CTRL
UI --> CL : asks for credit card information
deactivate UI

CL -> UI : inserts the credit card information
activate UI

UI -> CTRL : credits = calcCredits(inv)
activate CTRL
deactivate CTRL

UI -> CTRL : addCredits(credits)
activate CTRL
deactivate CTRL

UI -> CTRL :  newDelivery()
activate CTRL
CTRL -> PLAT : delList = getDeliveryList()
activate PLAT
deactivate PLAT
CTRL -> DELLIST : del = newDelivery()
deactivate CTRL
activate DELLIST
DELLIST -> DELLIST : generateId()
DELLIST -> DELLIST : getDate()
DELLIST -> DELLIST : calcWeight()

DELLIST -> DEL **: create(id, date, weight, inv)
deactivate DELLIST


UI -> CTRL : registerDelivery()
activate CTRL
CTRL -> DELLIST : registerDelivery(del)
activate DELLIST
DELLIST -> DELLIST : addDelivery(del)
deactivate DELLIST
deactivate CTRL

UI -> CTRL : sendEmail(inv,p)
activate CTRL
deactivate CTRL

UI --> CL :  informs about the sucess of the operation
deactivate UI

@enduml
